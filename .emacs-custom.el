(custom-set-variables
  ;; custom-set-variables was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 '(abbrev-mode nil)
 '(auto-coding-alist (quote (("\\.\\(arc\\|zip\\|lzh\\|lha\\|zoo\\|[jew]ar\\|xpi\\|exe\\)\\'" . no-conversion) ("\\.\\(ARC\\|ZIP\\|LZH\\|LHA\\|ZOO\\|[JEW]AR\\|XPI\\|EXE\\)\\'" . no-conversion) ("\\.\\(sx[dmicw]\\|odt\\|tar\\|tgz\\)\\'" . no-conversion) ("\\.\\(gz\\|Z\\|bz\\|bz2\\|gpg\\)\\'" . no-conversion) ("\\.\\(jpe?g\\|png\\|gif\\|tiff?\\|p[bpgn]m\\)\\'" . no-conversion) ("\\.pdf\\'" . no-conversion) ("/#[^/]+#\\'" . raw-text))))
 '(auto-coding-regexp-alist (quote (("^BABYL OPTIONS:[ 	]*-\\*-[ 	]*rmail[ 	]*-\\*-" . no-conversion) ("\\`\376\377" . utf-16be-with-signature) ("\\`\377\376" . utf-16le-with-signature) ("\\`\357\273\277" . utf-8-unix) ("\\`Ã¢" . utf-8-unix))))
 '(confirm-kill-emacs (quote y-or-n-p))
 '(css-indent-offset 2)
 '(dired-listing-switches "-ahl")
 '(display-battery-mode t)
 '(display-time-day-and-date nil)
 '(display-time-mail-file (quote none))
 '(display-time-mode t)
 '(enable-multibyte-characters t)
 '(file-coding-system-alist (quote (("\\.\\(html.erb\\|erb\\|js.rjs\\|builder\\|rhtml\\|rxml\\|rjs\\|haml\\|liquid\\|mab\\)$" utf-8 . utf-8) ("Rakefile$" utf-8 . utf-8) ("\\.rake$" utf-8 . utf-8) ("\\.dz\\'" no-conversion . no-conversion) ("\\.g?z\\(~\\|\\.~[0-9]+~\\)?\\'" no-conversion . no-conversion) ("\\.tgz\\'" no-conversion . no-conversion) ("\\.tbz\\'" no-conversion . no-conversion) ("\\.bz2\\(~\\|\\.~[0-9]+~\\)?\\'" no-conversion . no-conversion) ("\\.Z\\(~\\|\\.~[0-9]+~\\)?\\'" no-conversion . no-conversion) ("\\.elc\\'" emacs-mule . emacs-mule) ("\\.utf\\(-8\\)?\\'" . utf-8) ("\\(\\`\\|/\\)loaddefs.el\\'" raw-text . raw-text-unix) ("\\.tar\\'" no-conversion . no-conversion) ("\\.po[tx]?\\'\\|\\.po\\." . po-find-file-coding-system) ("\\.\\(tex\\|ltx\\|dtx\\|drv\\)\\'" . latexenc-find-file-coding-system) ("" undecided))))
 '(font-lock-global-modes t)
 '(global-font-lock-mode t)
 '(global-pabbrev-mode t)
 '(grep-command "grep -nH -e")
 '(grep-template "grep <C> -nH -e <R> <F>")
 '(indent-tabs-mode nil)
 '(indicate-buffer-boundaries (quote left))
 '(indicate-empty-lines t)
 '(inhibit-eol-conversion nil)
 '(inhibit-startup-screen t)
 '(javascript-indent-level 2)
 '(line-spacing 1)
 '(midnight-mode t nil (midnight))
 '(only-global-abbrevs nil)
 '(org-agenda-files (quote ("~/Documents/dealerflow/notes.org")))
 '(pabbrev-idle-timer-verbose nil)
 '(pabbrev-minimal-expansion-p t)
 '(pabbrev-read-only-error nil)
 '(paren-match-face (quote paren-face-match-light))
 '(paren-sexp-mode t)
 '(recentf-mode t)
 '(ruby-comment-column 32)
 '(ruby-deep-arglist nil)
 '(ruby-deep-indent-paren-style (quote space))
 '(ruby-electric-newline-before-closing-bracket t)
 '(ruby-encoding-map (quote ((shift_jis . cp932) (shift-jis . cp932))))
 '(ruby-indent-level 2)
 '(safe-local-variable-values (quote ((Package . DRAKMA) (Package . CL-USER) (Syntax . ANSI-Common-Lisp) (package . asdf) (Syntax . COMMON-LISP) (Package . CL-WHO) (Base . 10))))
 '(save-abbrevs nil)
 '(scroll-bar-mode nil)
 '(show-paren-mode t)
 '(standard-indent 2)
 '(tab-width 2)
 '(text-mode-hook (quote (text-mode-hook-identify)))
 '(tool-bar-mode nil)
 '(uniquify-buffer-name-style (quote forward) nil (uniquify))
 '(vc-directory-exclusion-list (quote ("SCCS" "RCS" "CVS" "MCVS" ".svn" ".git" ".hg" ".bzr" "{arch}" "log" "doc" "rails")))
 '(vc-dired-recurse nil)
 '(vc-dired-terse-display nil)
 '(vc-handled-backends (quote (RCS CVS SCCS Git Hg Arch MCVS)))
 '(vc-keep-workfiles t)
 '(version-control nil)
 '(visible-bell nil)
 '(winner-mode t nil (winner)))
(custom-set-faces
  ;; custom-set-faces was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 '(default ((t (:stipple nil :background "ivory1" :foreground "grey15" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 83 :width normal :foundry "unknown" :family "DejaVu Sans Mono"))))
 '(border ((t (:foreground "grey30"))))
 '(css-selector ((t (:inherit font-lock-function-name-face))))
 '(erb-comment-delim-face ((t (:inherit (erb-delim-face erb-comment-face) :weight bold))))
 '(erb-comment-face ((t (:inherit erb-face :foreground "darkgreen"))))
 '(erb-delim-face ((t (:foreground "grey60"))))
 '(erb-face ((t (:background "gray90"))))
 '(erb-out-delim-face ((t (:inherit erb-delim-face))))
 '(flymake-errline ((((class color)) (:background "pink1"))))
 '(flymake-warnline ((((class color)) (:background "lightblue2"))))
 '(font-lock-constant-face ((((class color) (min-colors 88) (background light)) (:foreground "SlateGrey"))))
 '(font-lock-function-name-face ((((class color) (min-colors 88) (background light)) (:foreground "Blue"))))
 '(font-lock-keyword-face ((((class color) (min-colors 88) (background light)) (:foreground "NavajoWhite4"))))
 '(font-lock-string-face ((((class color) (min-colors 88) (background light)) (:foreground "DarkOliveGreen"))))
 '(font-lock-type-face ((((class color) (min-colors 88) (background light)) (:foreground "RoyalBlue"))))
 '(fringe ((((class color) (background light)) (:background "ivory2"))))
 '(ido-first-match ((((class color)) (:foreground "blue"))))
 '(ido-only-match ((((class color)) (:foreground "firebrick"))))
 '(ido-subdir ((((min-colors 88) (class color)) (:foreground "darkgreen"))))
 '(mode-line ((((class color) (min-colors 88)) (:background "ivory3" :foreground "black" :box (:line-width -1 :color "ivory4")))))
 '(mode-line-inactive ((default (:inherit mode-line)) (((class color) (min-colors 88) (background light)) (:background "ivory2" :foreground "ivory4" :box (:line-width -1 :color "ivory3") :weight light))))
 '(mumamo-background-chunk-major ((((class color) (min-colors 88) (background dark)) nil)))
 '(mumamo-background-chunk-submode ((nil (:background "gray34"))))
 '(scroll-bar ((t (:foreground "gray30"))))
 '(slime-repl-inputed-output-face ((((class color) (background dark)) (:foreground "peru"))))
 '(vertical-border ((nil (:foreground "grey30"))))
 '(yaml-tab-face ((((class color)) (:background "red" :inverse-video unspecified))))
 '(yas/field-highlight-face ((((class color) (background light)) (:background "DarkSeaGreen1")))))
